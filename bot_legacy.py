#!/usr/bin/env python3
"""
Telegram –±–æ—Ç –¥–ª—è Badminton Rating —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º legacy API
"""

import logging
from telegram import Update, BotCommand, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    welcome_text = f"""
üè∏ –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Badminton Rating Mini App!

–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –∏–≥—Ä–∞–º –≤ –±–∞–¥–º–∏–Ω—Ç–æ–Ω
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ —Å–∏—Å—Ç–µ–º–µ Glicko-2
‚Ä¢ –ò–≥—Ä–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–∞—Ö –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App:
"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
    keyboard = [
        [InlineKeyboardButton("üè∏ –û—Ç–∫—Ä—ã—Ç—å Badminton Rating", web_app={"url": "http://localhost:8000/app"})]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    update.message.reply_text(welcome_text, reply_markup=reply_markup)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.first_name}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

def help_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å Mini App
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/rating - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
/about - –û –ø—Ä–æ–µ–∫—Ç–µ

üì± Mini App —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–∫–∞
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–∏—Å–∫ –∏–≥—Ä
‚Ä¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–∞–º
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ Glicko-2
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–π –∏–≥—Ä—ã (2v2, 1v1)
"""
    
    update.message.reply_text(help_text)

def rating_info(update: Update, context: CallbackContext) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞"""
    rating_text = """
üèÜ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ Glicko-2

–≠—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏ —Ç–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞, –∫–æ—Ç–æ—Ä–∞—è:

üìä –£—á–∏—Ç—ã–≤–∞–µ—Ç:
‚Ä¢ –¢–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞
‚Ä¢ –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–∞ (RD)
‚Ä¢ –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–∞
‚Ä¢ –°–∏–ª—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤

üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º —É—Ä–æ–≤–Ω—è
‚Ä¢ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –£—á–µ—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π –∏–≥—Ä—ã
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã
"""
    
    update.message.reply_text(rating_text)

def about(update: Update, context: CallbackContext) -> None:
    """–û –ø—Ä–æ–µ–∫—Ç–µ"""
    about_text = """
üè∏ Badminton Rating Mini App

üì± –ß—Ç–æ —ç—Ç–æ:
Telegram Mini App –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤ –±–∞–¥–º–∏–Ω—Ç–æ–Ω–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º—ã Glicko-2.

üõ†Ô∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:
‚Ä¢ Backend: Python + FastAPI
‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
‚Ä¢ Frontend: HTML + CSS + JavaScript
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞: Glicko-2
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: Telegram Bot API

üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–∏—Å–∫ –∏–≥—Ä
‚Ä¢ –ö–æ–º–∞–Ω–¥–Ω–∞—è –∏–≥—Ä–∞ (1v1, 2v2)
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚Ä¢ –†–∞–±–æ—Ç–∞ –ø—Ä—è–º–æ –≤ Telegram
"""
    
    update.message.reply_text(about_text)

def error_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {context.error}")
    if update and update.message:
        update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        return
    
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ (Legacy API)...")
    print(f"üì± –¢–æ–∫–µ–Ω: {token[:20]}...")
    print("üåê Mini App URL: http://localhost:8000/app")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º updater
        updater = Updater(token)
        
        # –ü–æ–ª—É—á–∞–µ–º dispatcher –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        dispatcher = updater.dispatcher
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        dispatcher.add_handler(CommandHandler("start", start))
        dispatcher.add_handler(CommandHandler("help", help_command))
        dispatcher.add_handler(CommandHandler("rating", rating_info))
        dispatcher.add_handler(CommandHandler("about", about))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        dispatcher.add_error_handler(error_handler)
        
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print("üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤ Telegram –±–æ—Ç—É @GoBadmikAppBot")
        print("=" * 50)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        updater.start_polling()
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        updater.idle()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()

