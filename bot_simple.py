#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import asyncio
import logging
from telegram import Update, BotCommand
from telegram.ext import Application, CommandHandler, ContextTypes
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    welcome_text = f"""
üè∏ –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Badminton Rating Mini App!

–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –∏–≥—Ä–∞–º –≤ –±–∞–¥–º–∏–Ω—Ç–æ–Ω
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ —Å–∏—Å—Ç–µ–º–µ Glicko-2
‚Ä¢ –ò–≥—Ä–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–∞—Ö –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App:
"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
    keyboard = [
        [{
            "text": "üè∏ –û—Ç–∫—Ä—ã—Ç—å Badminton Rating",
            "web_app": {"url": "http://localhost:8000/app"}
        }]
    ]
    
    await update.message.reply_text(
        welcome_text,
        reply_markup={"inline_keyboard": keyboard}
    )
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.first_name}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å Mini App
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/rating - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
/about - –û –ø—Ä–æ–µ–∫—Ç–µ

üì± Mini App —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–∫–∞
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–∏—Å–∫ –∏–≥—Ä
‚Ä¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–∞–º
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ Glicko-2
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–π –∏–≥—Ä—ã (2v2, 1v1)
"""
    
    await update.message.reply_text(help_text)

async def rating_info(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞"""
    rating_text = """
üèÜ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ Glicko-2

–≠—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏ —Ç–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞, –∫–æ—Ç–æ—Ä–∞—è:

üìä –£—á–∏—Ç—ã–≤–∞–µ—Ç:
‚Ä¢ –¢–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–∞
‚Ä¢ –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–∞ (RD)
‚Ä¢ –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–∞
‚Ä¢ –°–∏–ª—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤

üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º —É—Ä–æ–≤–Ω—è
‚Ä¢ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –£—á–µ—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π –∏–≥—Ä—ã
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã
"""
    
    await update.message.reply_text(rating_text)

async def about(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û –ø—Ä–æ–µ–∫—Ç–µ"""
    about_text = """
üè∏ Badminton Rating Mini App

üì± –ß—Ç–æ —ç—Ç–æ:
Telegram Mini App –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤ –±–∞–¥–º–∏–Ω—Ç–æ–Ω–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º—ã Glicko-2.

üõ†Ô∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:
‚Ä¢ Backend: Python + FastAPI
‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
‚Ä¢ Frontend: HTML + CSS + JavaScript
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞: Glicko-2
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: Telegram Bot API

üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–∏—Å–∫ –∏–≥—Ä
‚Ä¢ –ö–æ–º–∞–Ω–¥–Ω–∞—è –∏–≥—Ä–∞ (1v1, 2v2)
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚Ä¢ –†–∞–±–æ—Ç–∞ –ø—Ä—è–º–æ –≤ Telegram
"""
    
    await update.message.reply_text(about_text)

async def setup_commands(application: Application) -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    commands = [
        BotCommand("start", "üè∏ –ó–∞–ø—É—Å—Ç–∏—Ç—å Badminton Rating"),
        BotCommand("help", "üîç –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"),
        BotCommand("rating", "üèÜ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–π—Ç–∏–Ω–≥–∞"),
        BotCommand("about", "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ"),
    ]
    
    await application.bot.set_my_commands(commands)
    logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")

async def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        return
    
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    print(f"üì± –¢–æ–∫–µ–Ω: {token[:20]}...")
    print("üåê Mini App URL: http://localhost:8000/app")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(token).build()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    await setup_commands(application)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("rating", rating_info))
    application.add_handler(CommandHandler("about", about))
    
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    print("üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤ Telegram –±–æ—Ç—É @GoBadmikAppBot")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await application.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

